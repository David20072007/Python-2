import multiprocessing
class WarehouseManager:
    def __init__(self):
        self.data = {}
        self.lock = multiprocessing.Lock()
    def process_request(self, request):
        action, product, quantity = request
        with self.lock:
            if action == 'receipt':
                if product in self.data:
                    self.data[product] += quantity
                else:
                    self.data[product] = quantity
                print(f"Получение: {product} - {quantity}, текущее количество: {self.data[product]}")
            elif action == 'shipment':
                if product in self.data and self.data[product] >= quantity:
                    self.data[product] -= quantity
                    print(f"Отгрузка: {product} - {quantity}, текущее количество: {self.data[product]}")
                else:
                    print(f"Отгрузка: {product} - {quantity} невозможна, текущее количество: {self.data.get(product, 0)}")
    def run(self, requests):
        processes = []
        for request in requests:
            process = multiprocessing.Process(target=self.process_request, args=(request,))
            processes.append(process)
            process.start()
        for process in processes:
            process.join()
if __name__ == "__main__":
    manager = WarehouseManager()
    requests = [
        ('receipt', 'apple', 100),
        ('receipt', 'banana', 50),
        ('shipment', 'apple', 30),
        ('shipment', 'banana', 20),
        ('shipment', 'banana', 40),
        ('receipt', 'orange', 75),
        ('shipment', 'orange', 25),
        ('shipment', 'apple', 80)
    ]
    manager.run(requests)
    print("Финальное состояние склада:", manager.data)

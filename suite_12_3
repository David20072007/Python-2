import unittest
from tests_12_1 import RunnerTest, TournamentTest

def skip_if_frozen(cls):
    def decorator(func):
        def wrapper(*args, **kwargs):
            if cls.is_frozen:
                print(f"Тесты в этом кейсе заморожены: {func.__name__}")
                raise unittest.SkipTest("Тесты в этом кейсе заморожены")
            else:
                return func(*args, **kwargs)
        return wrapper
    return decorator

class RunnerTest(RunnerTest):
    is_frozen = False

    @skip_if_frozen(RunnerTest)
    def test_walk(self):
        super().test_walk()

    @skip_if_frozen(RunnerTest)
    def test_run(self):
        super().test_run()

    @skip_if_frozen(RunnerTest)
    def test_challenge(self):
        super().test_challenge()

class TournamentTest(TournamentTest):
    is_frozen = True

    @skip_if_frozen(TournamentTest)
    def test_race_usain_and_nick(self):
        super().test_race_usain_and_nick()

    @skip_if_frozen(TournamentTest)
    def test_race_andrey_and_nick(self):
        super().test_race_andrey_and_nick()

    @skip_if_frozen(TournamentTest)
    def test_race_usain_andrey_and_nick(self):
        super().test_race_usain_andrey_and_nick()

def suite():
    test_suite = unittest.TestSuite()
    test_suite.addTest(unittest.makeSuite(RunnerTest))
    test_suite.addTest(unittest.makeSuite(TournamentTest))
    return test_suite

if __name__ == '__main__':
    runner = unittest.TextTestRunner(verbosity=2)
    runner.run(suite())
